\babel@toc {english}{}
\addvspace {10\p@ }
\contentsline {xchapter}{Introduction}{1}{chapter.1}%
\addvspace {10\p@ }
\contentsline {xchapter}{Background}{15}{chapter.2}%
\contentsline {figure}{\numberline {2.1}{\ignorespaces \gls {sbs} network architecture for handwritten digit classification task.\relax }}{38}{figure.caption.16}%
\contentsline {figure}{\numberline {2.2}{\ignorespaces \gls {sbs} \glspl {ip_sbs} as independent computational entities, (a) illustrates an input layer with a massive amount of \glspl {ip_sbs} operating as independent computational entities, (b) shows a hidden layer with an arbitrary amount of \glspl {ip_sbs} as independent computational entities, (c) exhibits a set of neurons grouped in an \gls {ip_sbs}.\relax }}{39}{figure.caption.18}%
\contentsline {figure}{\numberline {2.3}{\ignorespaces (a) Performance classification of \gls {sbs} NN versus equivalent \gls {cnn}, and (b) example of the first pattern in the MNIST test data set with different amounts of positive additive uniformly distributed noise.\relax }}{40}{figure.caption.19}%
\contentsline {figure}{\numberline {2.4}{\ignorespaces Floating-point number representation.\relax }}{41}{figure.caption.20}%
\addvspace {10\p@ }
\contentsline {xchapter}{Accelerating Spike-by-Spike Neural Networks: Hybrid 8-bit Floating-Point and 4-bit Logarithmic Computation}{43}{chapter.3}%
\contentsline {figure}{\numberline {3.1}{\ignorespaces Dot-product hardware module with (a) standard floating-point (IEEE 754) arithmetic, (b) hybrid custom floating-point approximation, and (c) hybrid logarithmic approximation.\relax }}{46}{figure.caption.21}%
\contentsline {figure}{\numberline {3.2}{\ignorespaces System-level overview of the embedded software architecture.\relax }}{49}{figure.caption.22}%
\contentsline {figure}{\numberline {3.3}{\ignorespaces System-level hardware architecture with scalable number of heterogeneous \glspl {pu}: \emph {Spike}, \emph {Conv}, \emph {Pool}, and \emph {FC}\relax }}{50}{figure.caption.23}%
\contentsline {figure}{\numberline {3.4}{\ignorespaces The \emph {Conv} processing unit and its six stages: (a) receive \gls {ip_sbs} vector, (b) spike firing, (c) receive spike kernel, (d) update dynamics, (e) dispatch new \gls {ip_sbs} vector, (f) dispatch output spike matrix.\relax }}{52}{figure.caption.26}%
\contentsline {figure}{\numberline {3.5}{\ignorespaces Dot-product hardware module with standard floating-point (IEEE 754) computation, (a) exhibits the initiation interval of 10 clock cycles, (b) presents the iteration latency of 19 clock cycles, (c) shows the pairwise product block in dark-gray, and (d) illustrates the accumulation block in light-gray.\relax }}{54}{figure.caption.28}%
\contentsline {figure}{\numberline {3.6}{\ignorespaces Dot-product hardware module with hybrid custom floating-point approximation, (a) exhibits the initiation interval of 2 clock cycles, (b) presents the iteration latency of 13 clock cycles, (c) shows the pairwise product blocks in dark-gray, and (d) illustrates the accumulation blocks in light-gray.\relax }}{55}{figure.caption.30}%
\contentsline {figure}{\numberline {3.7}{\ignorespaces Dot-product hardware module with hybrid logarithmic approximation, (a) exhibits the initiation interval of 2 clock cycles, (b) presents the iteration latency of 9 clock cycles, (c) shows the pairwise product block in dark-gray, and (d) illustrates the accumulation blocks in light-gray.\relax }}{56}{figure.caption.31}%
\contentsline {figure}{\numberline {3.8}{\ignorespaces Computation on embedded CPU.\relax }}{59}{figure.caption.34}%
\contentsline {figure}{\numberline {3.9}{\ignorespaces System overview of the top-level architecture with 8 processing units.\relax }}{59}{figure.caption.36}%
\contentsline {figure}{\numberline {3.10}{\ignorespaces Performance of processing units with standard floating-point (IEEE 754) computation.\relax }}{59}{figure.caption.38}%
\contentsline {figure}{\numberline {3.11}{\ignorespaces Performance bottleneck of cyclic computation on processing units with standard floating-point (IEEE 754) arithmetic, (a) exhibits the starting of $t_{PU}$ of \emph {Conv2} on a previous computation cycle, (b) presents $t_{CPU}$ of \emph {Conv2} on the current computation cycle, (c) shows the CPU waiting time (in gray color) for \emph {Conv2} as a busy resource (awaiting for \emph {Conv2} interruption), and (d) illustrates the $t_{f}$ from the previous computation cycle, the starting of $t_{PU}$ on the current computation cycle (\emph {Conv2} interruption on completion, and start current computation cycle).\relax }}{60}{figure.caption.39}%
\contentsline {figure}{\numberline {3.12}{\ignorespaces Noise tolerance on hardware PU with standard floating-point (IEEE 754) computation (benchmark/reference), (a) exhibits accuracy degradation applying $50\%$ of noise amplitude, and (b) illustrates convergence of inference with $400$ spikes.\relax }}{63}{figure.caption.43}%
\contentsline {figure}{\numberline {3.13}{\ignorespaces $\qopname \relax o{log}_2$-histogram of each synaptic weight matrix showing the percentage of matrix elements with given integer exponent.\relax }}{65}{figure.caption.45}%
\contentsline {figure}{\numberline {3.14}{\ignorespaces Performance on processing units with hybrid custom floating-point approximation, (a) exhibits computation schedule, (b) presents cyclic computation schedule, and (c) shows the performance of \emph {Conv2} from a previous computation cycle during the preprocessing of \emph {H1\_CONV} on the current computation cycle without bottleneck.\relax }}{66}{figure.caption.49}%
\contentsline {figure}{\numberline {3.15}{\ignorespaces Noise tolerance on hardware PU with custom floating-point approximation, (a) exhibits accuracy degradation applying $50\%$ of noise amplitude, and (b) illustrates convergence of inference with $400$ spikes.\relax }}{67}{figure.caption.50}%
\contentsline {figure}{\numberline {3.16}{\ignorespaces Performance of processing units with hybrid logarithmic approximation, (a) exhibits computation schedule, and (b) illustrates cyclic computation schedule.\relax }}{68}{figure.caption.53}%
\contentsline {figure}{\numberline {3.17}{\ignorespaces Noise tolerance on hardware PU with hybrid logarithmic approximation, (a) exhibits accuracy degradation applying $40\%$ of noise amplitude, (b) illustrates convergence of inference with $600$ spikes.\relax }}{69}{figure.caption.55}%
\contentsline {figure}{\numberline {3.18}{\ignorespaces Power dissipation breakdown of platform implementations, (a) \cite {nevarez2020accelerator} architecture with homogeneous AUs using standard floating-point arithmetic (IEEE 754), (b) reference architecture with specialized heterogeneous PUs using standard floating-point arithmetic (IEEE 754), (c) proposed architecture with hybrid custom floating-point approximation, and (d) proposed architecture with hybrid logarithmic approximation.\relax }}{71}{figure.caption.60}%
\addvspace {10\p@ }
\contentsline {xchapter}{Accelerating Convolutional Neural Networks: Hybrid 6-bit Floating-Point Precision}{73}{chapter.4}%
\contentsline {figure}{\numberline {4.1}{\ignorespaces The workflow of our approach on embedded FPGAs.\relax }}{75}{figure.caption.61}%
\contentsline {figure}{\numberline {4.2}{\ignorespaces Base embedded system architecture.\relax }}{78}{figure.caption.62}%
\contentsline {figure}{\numberline {4.3}{\ignorespaces High level hardware architecture of the proposed tensor processor.\relax }}{78}{figure.caption.63}%
\contentsline {figure}{\numberline {4.4}{\ignorespaces Dot-product hardware module with (a) standard floating-point and (b) Hybrid-Float6.\relax }}{80}{figure.caption.66}%
\contentsline {figure}{\numberline {4.5}{\ignorespaces (a) Dot-product hardware module with Hybrid-Float6 MAC, (b) bias accumulation, (c) activation and normalization to IEEE754.\relax }}{80}{figure.caption.67}%
\contentsline {figure}{\numberline {4.6}{\ignorespaces Hybrid-Float6 multiply-accumulate hardware design.\relax }}{81}{figure.caption.69}%
\contentsline {figure}{\numberline {4.7}{\ignorespaces Design parameters for on-chip memory buffers on the TP.\relax }}{82}{figure.caption.71}%
\contentsline {figure}{\numberline {4.8}{\ignorespaces High level embedded software architecture.\relax }}{84}{figure.caption.77}%
\contentsline {figure}{\numberline {4.9}{\ignorespaces Software flowchart.\relax }}{85}{figure.caption.78}%
\contentsline {figure}{\numberline {4.10}{\ignorespaces Experimental setup for sensor analytics on structural health monitoring, all lengths are in meters (m).\relax }}{89}{figure.caption.81}%
\contentsline {figure}{\numberline {4.11}{\ignorespaces Spectrograms of sensors $S_1, S_2$ converted to grayscale for pulses at $x =0.105$ m, $y = 0.109$ m with noise disturbance.\relax }}{90}{figure.caption.82}%
\contentsline {figure}{\numberline {4.12}{\ignorespaces CNN-regression model for sensor analytics.\relax }}{91}{figure.caption.84}%
\contentsline {figure}{\numberline {4.13}{\ignorespaces Training results.\relax }}{92}{figure.caption.86}%
\contentsline {figure}{\numberline {4.14}{\ignorespaces Performance of the model with different data representations.\relax }}{93}{figure.caption.87}%
\contentsline {figure}{\numberline {4.15}{\ignorespaces Inference acceleration and power reduction on the TP with floating-point and HF6 vs. CPU on the Zynq-7007S SoC.\relax }}{96}{figure.caption.96}%
\contentsline {figure}{\numberline {4.16}{\ignorespaces Run-time inference of TensorFlow Lite on the Zynq-7007S SoC. (a) CPU ARM Cortex-A9 at $\unit [666]{MHz}$, (b) cooperative CPU + TP with floating-point Xilinx LogiCORE IP at $\unit [200]{MHz}$, and (c) cooperative CPU + TP with Hybrid-Float6 at $\unit [200]{MHz}$.\relax }}{98}{figure.caption.99}%
\contentsline {figure}{\numberline {4.17}{\ignorespaces 2D error distribution of three CNN-regression models.\relax }}{100}{figure.caption.101}%
\contentsline {figure}{\numberline {4.18}{\ignorespaces Hardware resource utilization on the Zynq-7007S SoC.\relax }}{100}{figure.caption.103}%
\contentsline {figure}{\numberline {4.19}{\ignorespaces Estimated power dissipation on the Zynq-7007S SoC with PS at $\unit [666]{MHz}$ and PL at $\unit [200]{MHz}$.\relax }}{100}{figure.caption.104}%
\addvspace {10\p@ }
\contentsline {xchapter}{Conclusion and Outlook}{103}{chapter.5}%
\addvspace {10\p@ }
\contentsline {xchapter}{Appendix}{107}{appendix.A}%
